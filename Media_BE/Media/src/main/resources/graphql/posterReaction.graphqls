scalar DateTime

enum ReactionEnum {
    like,
    love,
    haha,
    wow,
    sad,
    angry
}

type PosterReaction {
    posterReactionId: ID!
    poster: Poster,
    posterReaction: String!
    createDate: DateTime
    user: User
}

type PosterReactionDTO{
    posterReactionId: ID!
    posterId: ID,
    username: String,
    avatar: String,
    reaction: String!
    createDate: DateTime
}

type ReactionSummaryDTO {
    reaction: String!
    count: Int!
}

extend type Query {
    countReactions(posterId: ID!, reaction: String): Int
    getReactionsForPoster(posterId: ID!): [PosterReactionDTO]
    getReactionSummary(posterId: ID!): [ReactionSummaryDTO]
}

extend type Mutation {
    reactionPoster(userId: ID, posterId: ID, reaction: String): PosterReaction
}
